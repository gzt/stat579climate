View(polls)
View(polls)
bestresult<-ddply(polls,.(State,EV,MoE),summarise,maxdiff = max(diff))
View(bestresult)
size(bestresult)
dim(bestresult)
dim(bestresult)[1]
simulationresult<-function(statematrix){
n<-dim(statematrix)[1]
randvector<-runif(n,-1,1)
votevector<-statematrix[,4]+randvector*statematrix[,3]
simulationresult<-sum((votevector>0)*statematrix[,2])
}
simulationresult(bestresult)
fix(simulationresult)
simulationresult(bestresult)
simulationresult<-function(statematrix){
n<-dim(statematrix)[1]
randvector<-runif(n,-1,1)
votevector<-statematrix[,4]+randvector*statematrix[,3]
simulationresult<-sum((votevector>0)*statematrix[,2])
return simulationresult
}
n<-dim(bestresult)[1]
randvector<-runif(n,-1,1)
votevector<-bestresult[,4]+randvector*bestresult[,3]
simulationresult<-sum((votevector>0)*bestresult[,2])
simulationresult
simulationresult<-function(statematrix){
n<-dim(statematrix)[1]
randvector<-runif(n,-1,1)
votevector<-statematrix[,4]+randvector*statematrix[,3]
simulationresult<-sum((votevector>0)*statematrix[,2])
return simulationresult
}
simulationresult<-function(statematrix){
n<-dim(statematrix)[1]
randvector<-runif(n,-1,1)
votevector<-statematrix[,4]+randvector*statematrix[,3]
simulationresult<-sum((votevector>0)*statematrix[,2])
}
simulationresult(bestresult)
fix(simulationresult)
z<-rep(0,10000)
for (i in 1:10000) {z[i]=(simulationresult(bestresult)>270)}
fix(z)
percent<-sum(z)/length(z)
z<-rep(0,10000)
for (i in 1:10000) {z[i]=simulationresult(bestresult)}
percent<-sum(z>270)/length(z)
fix(z)
polls<-ddply(polls,.(State),transform,newdate=Day/max(Day))
View(polls)
polls<-subset(ddply(polls,.(State),transform,newdate=Day/max(Day)),newdate>.9)
View(polls)
polls<-read.csv("http://www.electoral-vote.com/evp2012/Pres/pres_polls.csv")
polls<-ddply(polls, .(State,Day,Date,Pollster,EV), summarise, diff = (GOP+2-Dem), MoE = 5)
polls<-subset(ddply(polls,.(State),transform,newdate=(max(Day)-Day),newdate<30)
)
polls<-subset(ddply(polls,.(State),transform,newdate=(max(Day)-Day)),newdate<30)
View(polls)
bestresult<-ddply(polls,.(State,EV,MoE),summarise,maxdiff = max(diff))
simulationresult<-function(statematrix){
n<-dim(statematrix)[1]
randvector<-runif(n,-1,1)
votevector<-statematrix[,4]+randvector*statematrix[,3]
simulationresult<-sum((votevector>0)*statematrix[,2])
}
z<-rep(0,10000)
for (i in 1:10000) {z[i]=simulationresult(bestresult)}
percent<-sum(z>270)/length(z)
fix(z)
fix(z)
View(bestresult)
qplot(z, geom=histogram)
qplot(z, geom="histogram")
qplot(z, geom="histogram", binwidth=1)
qplot(z, geom="histogram", binwidth=1)
qplot(z, geom="histogram", binwidth=1)
qplot(z, geom="histogram", binwidth=1, color=(z>270))
qplot(z, geom="histogram", binwidth=1, colour=(z>270))
qplot(z, geom="histogram", binwidth=1, fill=(z>270))
qplot(z, geom="bar", binwidth=1, fill=(z>270))
qplot(z, geom="bar", binwidth=1, color=(z>270))
qplot(z, geom="histogram", binwidth=1, color=(z>270))
qplot(z, geom="histogram", binwidth=1)
qplot(z, geom="histogram", binwidth=1)
View(bestresult)
View(polls)
library("plyr")
library("ggplot2")
polls<-read.csv("http://www.electoral-vote.com/evp2012/Pres/pres_polls.csv")
head(polls)
polls1<-ddply(polls, .(State,Day,Date,Pollster,EV), summarise, diff = (GOP+2-Dem), MoE = 5)
polls1<-subset(ddply(polls1,.(State),transform,newdate=(max(Day)-Day)),newdate<30)
bestresult<-ddply(polls1,.(State,EV,MoE),summarise,maxdiff = max(diff))
avgresult<-ddply(polls1,.(State,EV,MoE),summarise,maxdiff = mean(diff))
simulationresult<-function(statematrix){
n<-dim(statematrix)[1]
randvector<-runif(n,-1,1)
votevector<-statematrix[,4]+randvector*statematrix[,3]
simulationresult<-sum((votevector>0)*statematrix[,2])
}
simlength<-100000
z<-rep(0,simlength)
y<-rep(0,simlength)
for (i in 1:simlength) {z[i]=simulationresult(bestresult)
y[i]=simulationresult(avgresult)}
percent<-sum(z>=270)/length(z)
percenty<-sum(y>=270)/length(y)
qplot(z, geom="histogram", binwidth=1)
qplot(y, geom="histogram", binwidth=1)
qplot(z, geom="histogram", binwidth=1, colour=(z>270))
View(avgresult)
sum((avgresult$maxdiff>0)*(avgresult$EV))
library("plyr")
library("ggplot2")
polls<-read.csv("http://www.electoral-vote.com/evp2012/Pres/pres_polls.csv")
head(polls)
polls1<-ddply(polls, .(State,Day,Date,Pollster,EV), summarise, diff = (GOP-Dem), MoE = 3)
polls1<-subset(ddply(polls1,.(State),transform,newdate=(max(Day)-Day)),newdate<30)
View(polls1)
avgresult<-ddply(polls1,.(State,EV,MoE),summarise,maxdiff = mean(diff))
simulationresult<-function(statematrix){
n<-dim(statematrix)[1]
randvector<-runif(n,-1,1)
votevector<-statematrix[,4]+randvector*statematrix[,3]
simulationresult<-sum((votevector>0)*statematrix[,2])
}
simlength<-100000
y<-rep(0,simlength)
for (i in 1:simlength) {y[i]=simulationresult(avgresult)}
percenty<-sum(y>=270)/length(y)
qplot(y, geom="histogram", binwidth=1)
View(polls1)
View(avgresult)
z<-(y>=270)
qplot(y, geom="histogram", binwidth=1, color=z)
z<-(y<270)
qplot(y, geom="histogram", binwidth=1, color=z)
qplot(y, geom="histogram", binwidth=1, fill=z)
View(polls)
View(polls1)
View(polls1)
polls1<-ddply(polls, .(State,Day,Date,Pollster,EV), summarise, diff = (GOP-Dem), MoE = 3)
polls1<-subset(ddply(polls1,.(State),transform,newdate=(max(Day)-Day)),((newdate<30)&(Pollster != "Angus-Reid-3") )
)
View(polls1)
avgresult<-ddply(polls1,.(State,EV,MoE),summarise,maxdiff = mean(diff))
simulationresult<-function(statematrix){
n<-dim(statematrix)[1]
randvector<-rnorm(n,0,1)
votevector<-statematrix[,4]+randvector*statematrix[,3]
simulationresult<-sum((votevector>0)*statematrix[,2])
}
simlength<-100000
y<-rep(0,simlength)
for (i in 1:simlength) {y[i]=simulationresult(avgresult)}
percenty<-sum(y>=270)/length(y)
z<-(y<270)
qplot(y, geom="histogram", binwidth=1, fill=z)
View(avgresult)
avgresult<-ddply(polls1,.(State,EV,MoE),summarise,maxdiff = mean(diff))
simulationresult<-function(statematrix){
n<-dim(statematrix)[1]
randvector<-rnorm(n,0,1)
votevector<-statematrix[,4]+randvector*statematrix[,3]
simulationresult<-sum((votevector>0)*statematrix[,2])
}
simlength<-100000
y<-rep(0,simlength)
for (i in 1:simlength) {y[i]=simulationresult(avgresult)}
percenty<-sum(y>=270)/length(y)
z<-(y<270)
library("plyr")
library("ggplot2")
polls<-read.csv("http://www.electoral-vote.com/evp2012/Pres/pres_polls.csv")
polls1<-ddply(polls, .(State,Day,Date,Pollster,EV), summarise, diff = (GOP-Dem), MoE = 5)
polls1<-subset(ddply(polls1,.(State),transform,newdate=(max(Day)-Day)),((newdate<30)&(Pollster != "Angus-Reid-3") ))
avgresult<-ddply(polls1,.(State,EV,MoE),summarise,maxdiff = mean(diff))
simulationresult<-function(statematrix){
n<-dim(statematrix)[1]
randvector<-rnorm(n,0,1)
votevector<-statematrix[,4]+randvector*statematrix[,3]
simulationresult<-sum((votevector>0)*statematrix[,2])
}
simlength<-100000
y<-rep(0,simlength)
for (i in 1:simlength) {y[i]=simulationresult(avgresult)}
percenty<-sum(y>=270)/length(y)
z<-(y<270)
qplot(y, geom="histogram", binwidth=1, fill=z)
View(polls1)
library("plyr")
library("ggplot2")
polls<-read.csv("http://www.electoral-vote.com/evp2012/Pres/pres_polls.csv")
head(polls)
polls1<-ddply(polls, .(State,Day,Date,Pollster,EV), summarise, diff = (GOP+2-Dem), MoE = 5)
polls1<-subset(ddply(polls1,.(State),transform,newdate=(max(Day)-Day)),((newdate<30)&(Pollster != "Angus-Reid-3") ))
bestresult<-ddply(polls1,.(State,EV,MoE),summarise,maxdiff = max(diff))
avgresult<-ddply(polls1,.(State,EV,MoE),summarise,maxdiff = mean(diff))
simulationresult<-function(statematrix){
n<-dim(statematrix)[1]
randvector<-rnorm(n,0,1)
votevector<-statematrix[,4]+randvector*statematrix[,3]
simulationresult<-sum((votevector>0)*statematrix[,2])
}
simlength<-100000
z<-rep(0,simlength)
y<-rep(0,simlength)
for (i in 1:simlength) {z[i]=simulationresult(bestresult)
y[i]=simulationresult(avgresult)}
percent<-sum(z>=270)/length(z)
colorz<-(z<270)
percenty<-sum(y>=270)/length(y)
colory<-(y<270)
qplot(z, geom="histogram", binwidth=1, fill=colorz)
qplot(y, geom="histogram", binwidth=1, fill=colory)
View(avgresult)
library("plyr")
library("ggplot2")
polls<-read.csv("http://www.electoral-vote.com/evp2012/Pres/pres_polls.csv")
head(polls)
polls1<-ddply(polls, .(State,Day,Date,Pollster,EV), summarise, diff = (GOP-Dem))
polls1<-subset(ddply(polls1,.(State),transform,newdate=(max(Day)-Day)),((newdate<30)&(Pollster != "Angus-Reid-3") ))
polls1<-ddply(polls1,.(State),transform,MoE = max(diff))
View(polls1)
polls1<-ddply(polls, .(State,Day,Date,Pollster,EV), summarise, diff = (GOP-Dem))
polls1<-subset(ddply(polls1,.(State),transform,newdate=(max(Day)-Day)),((newdate<30)&(Pollster != "Angus-Reid-3") ))
polls1<-ddply(polls1,.(State),transform, MoE = .5*((max(diff)-min(diff))) )
View(polls1)
polls1<-ddply(polls, .(State,Day,Date,Pollster,EV), summarise, diff = (GOP-Dem))
polls1<-subset(ddply(polls1,.(State),transform,newdate=(max(Day)-Day)),((newdate<30)&(Pollster != "Angus-Reid-3") ))
polls1<-ddply(polls1,.(State),transform, MoE = .5*((max(diff)-min(diff))),sd=sd(diff) )
View(polls1)
View(bestresult)
View(avgresult)
View(polls)
library("plyr")
library("ggplot2")
polls<-read.csv("http://www.electoral-vote.com/evp2012/Pres/pres_polls.csv")
polls1<-ddply(polls, .(State,Day,Date,Pollster,EV), summarise, diff = (GOP-Dem), Pollname = substring(Pollster, 1, 5))
polls1<-subset(polls1,((Pollname == "Rasmu")|(Day==1)))
View(polls1)
rasmuresult<-subset(ddply(polls1,.(State),transform,rank=rank(Day)),rank==1)
View(rasmuresult)
rasmuresult<-subset(ddply(polls1,.(State),transform,rank=rank(-Day)),rank==1)
View(rasmuresult)
View(bestresult)
polls1<-ddply(polls1,.(State),transform, MoE = max(.5*((max(diff)-min(diff))),5) )
rasmuresult<-subset(ddply(polls1,.(State),transform,rank=rank(-Day)),rank==1)
View(rasmuresult)
rasmuresult<-subset(ddply(polls1,.(State),transform,rank=rank(-Day)),rank==1)[,c(2,6,7,9)]
View(rasmuresult)
rasmuresult<-subset(ddply(polls1,.(State),transform,rank=rank(-Day)),rank==1)[,c(1,5,6,8)]
View(rasmuresult)
head(rasmuresult)
head(rasmuresult[,1])
View(rasmuresult)
rasmuresult[,4]
75+85+89+91
340/4
100+0+4^2+6^2
152*4
4*((150-225)^2 + (200-225)^2 + (250-225)^2+75^2)
-75*4*75 + -25*4*85 + 25*4*89 + 75*4*91
5200/50000
85-225*.104
5*((150-225)^2 + (200-225)^2 + (250-225)^2+75^2)
5200/4 * 5
6500/62500
4(1.15+1+1.25+0.6)
4*(1.15+1+1.25+0.6)
4*((61.6 + .104*150)-75)^2
5*(((61.6 + .104*150)-75)^2+((61.6 + .104*200)-85)^2+((61.6 + .104*250)-89)^2+((61.6 + .104*300)-91)^2)
(((61.6 + .104*150)-75)^2+((61.6 + .104*200)-85)^2+((61.6 + .104*250)-89)^2+((61.6 + .104*300)-91)^2)
5*(((61.6 + .104*150)-85)^2+((61.6 + .104*200)-85)^2+((61.6 + .104*250)-85)^2+((61.6 + .104*300)-85)^2)
((61.6 + .104*150)-85)^2
16+5(100+0+4^2+6^2)
16+5*(100+0+4^2+6^2)
sqrt(62500)
100/(18*250)
100/18*sqrt(1/20 + 225/62500)
61.6 + 1.286*2.101
61.6 - 1.286*2.101
.104 + .0222*2.101
.104 - .0222*2.101
rneedle<-function(n){
x<-runif(n,0,5)
y<-runif(n,0,1)
theta<-runif(n,-pi,pi)
rneedle<-cbind(x,y,theta)
}
x<-rneedle(50)
fix(rneedle)
View(x)
U=runif(N,min=L,max=D-L) #centre
L=0.35 #half-length of the needle
D=20  #length of the room
N=10^3
U=runif(N,min=L,max=D-L) #centre
O=runif(N,min=0,max=pi) #angle
C=cbind(runif(N,0,D),U)
A=C+L*cbind(cos(O),sin(O))
B=C-L*cbind(cos(O),sin(O))
plot(C,type="n",axes=F,xlim=c(0,D),ylim=c(0,D))
for (t in 1:N)
lines(c(A[t,1],B[t,1]),c(A[t,2],B[t,2]),col="steelblue")
ggplot2( xlim=c(0,5), ylim=c(-1,1))+geom_vline(yintercept=c(0,1))
library(ggplot2)
ggplot2( xlim=c(0,5), ylim=c(-1,1))+geom_vline(yintercept=c(0,1))
ggplot( xlim=c(0,5), ylim=c(-1,1))+geom_vline(yintercept=c(0,1))
p<-ggplot()
p<-p+geom_vline(yintercept=c(0,1))
p<-p+geom_segment(aes(x=((needles[,2]-.5*abs(cos(needles[,3]))), xend=((needles[,2]+.5*abs(cos(needles[,3]))))), y=(needles[,2]-.5*abs(sin(needles[,3]))), yend=(needles[,2]+.5*abs(sin(needles[,3]))), fill=z))
p<-p+geom_segment(aes(x=(needles[,2]-.5*abs(cos(needles[,3]))), xend=(needles[,2]+.5*abs(cos(needles[,3]))), y=(needles[,2]-.5*abs(sin(needles[,3]))), yend=(needles[,2]+.5*abs(sin(needles[,3]))), fill=z))
library(ggplot2)
rneedle<-function(n){
x<-runif(n,0,5)
y<-runif(n,0,1)
theta<-runif(n,-pi,pi)
rneedle<-cbind(x,y,theta)
}
plotneedle<-function(needles){
length<-0.5
z<-(((needles[,2]-.5*abs(sin(needles[,3])))<0)|(needles[,2]+.5*abs(sin(needles[,3])))>1)
p<-ggplot()
p<-p+geom_vline(yintercept=c(0,1))
p<-p+geom_segment(aes(x=(needles[,2]-.5*abs(cos(needles[,3]))), xend=(needles[,2]+.5*abs(cos(needles[,3]))), y=(needles[,2]-.5*abs(sin(needles[,3]))), yend=(needles[,2]+.5*abs(sin(needles[,3]))), fill=z))
plotneedle<-p
}
dim(x)
length<-dim(x)
length[1]
buffon<-function(needles){
size<-dim(needles)
buffon<-2*dim[1]/sum(((needles[,2]-.5*abs(sin(needles[,3])))<0)|(needles[,2]+.5*abs(sin(needles[,3])))>1)
}
fix(p)
plotneedle<-function(needles){
length<-0.5
z<-(((needles[,2]-.5*abs(sin(needles[,3])))<0)|(needles[,2]+.5*abs(sin(needles[,3])))>1)
p<-ggplot()
p<-p+geom_vline(yintercept=c(0,1))
p<-p+geom_segment(aes(x=(needles[,2]-.5*abs(cos(needles[,3]))), xend=(needles[,2]+.5*abs(cos(needles[,3]))), y=(needles[,2]-.5*abs(sin(needles[,3]))), yend=(needles[,2]+.5*abs(sin(needles[,3]))), fill=z))
plotneedle<-p
}
buffon<-function(needles){
size<-dim(needles)
buffon<-2*dim[1]/sum(((needles[,2]-.5*abs(sin(needles[,3])))<0)|(needles[,2]+.5*abs(sin(needles[,3])))>1)
}
set.seed(1415)
X <- rneedle(50)
plotneedle(X)
buffon(X)
plotneedle<-function(needles){
length<-0.5
z<-(((needles[,2]-.5*abs(sin(needles[,3])))<0)|(needles[,2]+.5*abs(sin(needles[,3])))>1)
p<-ggplot()
p<-p+geom_vline(yintercept=c(0,1))
p<-p+geom_segment(aes(x=(needles[,2]-.5*abs(cos(needles[,3]))), xend=(needles[,2]+.5*abs(cos(needles[,3]))), y=(needles[,2]-.5*abs(sin(needles[,3]))), yend=(needles[,2]+.5*abs(sin(needles[,3]))), fill=z))
plotneedle<-p
}
buffon<-function(needles){
size<-dim(needles)
buffon<-2*size[1]/sum(((needles[,2]-.5*abs(sin(needles[,3])))<0)|(needles[,2]+.5*abs(sin(needles[,3])))>1)
}
set.seed(1415)
X <- rneedle(50)
plotneedle(X)
buffon(X)
fix(p)
plotneedle<-function(needles){
length<-0.5
z<-(((needles[,2]-.5*abs(sin(needles[,3])))<0)|(needles[,2]+.5*abs(sin(needles[,3])))>1)
p<-ggplot(needles)
p<-p+geom_vline(yintercept=c(0,1))
p<-p+geom_segment(aes(x=(needles[,2]-.5*abs(cos(needles[,3]))), xend=(needles[,2]+.5*abs(cos(needles[,3]))), y=(needles[,2]-.5*abs(sin(needles[,3]))), yend=(needles[,2]+.5*abs(sin(needles[,3]))), fill=z))
plotneedle<-p
}
buffon<-function(needles){
size<-dim(needles)
buffon<-2*size[1]/sum(((needles[,2]-.5*abs(sin(needles[,3])))<0)|(needles[,2]+.5*abs(sin(needles[,3])))>1)
}
set.seed(1415)
X <- rneedle(50)
plotneedle(X)
buffon(X)
rneedle<-function(n){
x<-runif(n,0,5)
y<-runif(n,0,1)
theta<-runif(n,-pi,pi)
rneedle<-cbind(x,y,theta)
}
needes<-rneedle(50)
z<-(((needles[,2]-.5*abs(sin(needles[,3])))<0)|(needles[,2]+.5*abs(sin(needles[,3])))>1)
needles<-rneedle(50)
z<-(((needles[,2]-.5*abs(sin(needles[,3])))<0)|(needles[,2]+.5*abs(sin(needles[,3])))>1)
geom_segment(aes(x=(needles[,2]-.5*abs(cos(needles[,3]))), xend=(needles[,2]+.5*abs(cos(needles[,3]))), y=(needles[,2]-.5*abs(sin(needles[,3]))), yend=(needles[,2]+.5*abs(sin(needles[,3]))), fill=z))
p<-ggplot()
p<-p+geom_vline(yintercept=c(0,1))
fix(p)
X <- rneedle(50)
z<-(((needles[,2]-.5*abs(sin(needles[,3])))<0)|(needles[,2]+.5*abs(sin(needles[,3])))>1)
framed<-data.frame(needles,z)
p<-ggplot(framed)
fix(p)
p<-p+geom_vline(yintercept=c(0,1))
p<-p+geom_segment(aes(x=(needles[,2]-.5*abs(cos(needles[,3]))), xend=(needles[,2]+.5*abs(cos(needles[,3]))), y=(needles[,2]-.5*abs(sin(needles[,3]))), yend=(needles[,2]+.5*abs(sin(needles[,3]))), fill=z))
fix(p)
fix(p)
set.seed(1415)
X <- rneedle(50)
plotneedle(X)
buffon(X)
buffon(X)
A<-buffon(X)
library(ggplot2)
rneedle<-function(n){
x<-runif(n,0,5)
y<-runif(n,0,1)
theta<-runif(n,-pi,pi)
rneedle<-data.frame(cbind(x,y,theta))
}
plotneedle<-function(needles){
z<-(((needles[,2]-.5*abs(sin(needles[,3])))<0)|(needles[,2]+.5*abs(sin(needles[,3])))>1)
framed<-data.frame(needles,z)
p<-ggplot(framed)
p<-p+geom_vline(yintercept=c(0,1))
p<-p+geom_segment(aes(x=(needles[,2]-.5*abs(cos(needles[,3]))), xend=(needles[,2]+.5*abs(cos(needles[,3]))), y=(needles[,2]-.5*abs(sin(needles[,3]))), yend=(needles[,2]+.5*abs(sin(needles[,3]))), fill=z))
plotneedle<-p
}
buffon<-function(needles){
size<-dim(needles)
buffon<-2*size[1]/sum(((needles[,2]-.5*abs(sin(needles[,3])))<0)|(needles[,2]+.5*abs(sin(needles[,3])))>1)
}
set.seed(1415)
X <- rneedle(50)
plotneedle(X)
A<-buffon(X)
fix(p)
z<-(((needles[,2]-.5*abs(sin(needles[,3])))<0)|(needles[,2]+.5*abs(sin(needles[,3])))>1)
framed<-data.frame(needles,z)
p<-ggplot(framed. aes(x=framed[,1], y=framed[,2]))
framed<-data.frame(needles,z)
framed
framed[,1]
p<-ggplot(framed. aes(x=framed[,1], y=framed[,2]))
framed[,1]
framed[,2]
p<-ggplot(framed. mapping=aes(x=framed[,1], y=framed[,2]))
p<-ggplot(framed,aes(x=framed[,2], y=framed[,3]))
p<-p+geom_vline(yintercept=c(0,1))
p<-p+geom_segment(aes(x=(framed[,2]-.5*abs(cos(framed[,3]))), xend=(framed[,2]+.5*abs(cos(framed[,3]))), y=(framed[,2]-.5*abs(sin(framed[,3]))), yend=(framed[,2]+.5*abs(sin(framed[,3]))), fill=framed[,4]))
plotneedle<-p
fix(plotneedle)
d <- ggplot(diamonds, aes(x=carat, y=price))
d + geom_point()
d + geom_point(aes(colour = carat))
d + geom_point(aes(colour = carat)) + scale_colour_brewer()
fix(d)
library(ggplot2)
# http://had.co.nz/ggplot2
# qplot examples -------------------------------------------------------------
qplot(diamonds$cut, diamonds$carat)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, colour=clarity)
qplot(carat, price, data = diamonds, geom=c("point", "smooth"), method=lm)
qplot(carat, data = diamonds,
geom="histogram")
qplot(carat, data = diamonds,
geom="histogram", binwidth = 1)
qplot(carat, data = diamonds,
geom="histogram", binwidth = 0.1)
qplot(carat, data = diamonds,
geom="histogram", binwidth = 0.01)
# using ggplot() -------------------------------------------------------------
d <- ggplot(diamonds, aes(x=carat, y=price))
d + geom_point()
d + geom_point(aes(colour = carat))
d + geom_point(aes(colour = carat)) + scale_colour_brewer()
ggplot(diamonds) + geom_histogram(aes(x=price))
# Separation of statistcs and geometric elements -----------------------------
p <- ggplot(diamonds, aes(x=price))
p + geom_histogram()
p + stat_bin(geom="area")
p + stat_bin(geom="point")
p + stat_bin(geom="line")
p + geom_histogram(aes(fill = clarity))
p + geom_histogram(aes(y = ..density..))
# Setting vs mapping ---------------------------------------------------------
p <- ggplot(diamonds, aes(x=carat,y=price))
# What will this do?
p + geom_point(aes(colour = "green"))
p + geom_point(colour = "green")
p + geom_point(colour = colour)
p<-qplot(needles[,1], needles[,2], fill=z)
library(ggplot2)
p<-qplot(needles[,1], needles[,2], fill=z)
p<-qplot(needles[,1], needles[,2], fill=z, data=needles)
qplot(needles[,1], needles[,2], fill=z, data=needles)
HadCRUT.4.1.1.0.anomalies.1 <- read.delim("~/Downloads/HadCRUT.4.1.1.0.anomalies.1_to_10_ascii/HadCRUT.4.1.1.0.anomalies.1.txt", header=F)
View(HadCRUT.4.1.1.0.anomalies.1)
install.package("ncdf4")
package.install("ncdf4")
isntall.packages("ncdf4")
install.packages("ncdf4")
install.packages("ncdf4", dependencies=TRUE)
install.packages("ncdf", dependencies=TRUE)
install.packages("ncdf4", dependencies=TRUE)
setwd("~/Documents/GitHub/stat579climate")
install.packages("ncdf4", dependencies=TRUE)
